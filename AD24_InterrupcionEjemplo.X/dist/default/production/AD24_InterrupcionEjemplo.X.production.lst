

Microchip MPLAB XC8 Assembler V2.32 build 20210201212658 
                                                                                               Thu Oct 17 15:29:25 2024

Microchip MPLAB XC8 C Compiler v2.32 (Free license) build 20210201212658 Og1 
     1                           	processor	18F4550
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     6                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     7                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     8                           	psect	text0,global,reloc=2,class=CODE,delta=1
     9                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    10                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    11                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    12                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    13                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    14                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    15                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    16  0000                     
    17                           ; Version 2.20
    18                           ; Generated 12/02/2020 GMT
    19                           ; 
    20                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    21                           ; All rights reserved.
    22                           ; 
    23                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    24                           ; 
    25                           ; Redistribution and use in source and binary forms, with or without modification, are
    26                           ; permitted provided that the following conditions are met:
    27                           ; 
    28                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    29                           ;        conditions and the following disclaimer.
    30                           ; 
    31                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    32                           ;        of conditions and the following disclaimer in the documentation and/or other
    33                           ;        materials provided with the distribution.
    34                           ; 
    35                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    36                           ;        software without specific prior written permission.
    37                           ; 
    38                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    39                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    40                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    41                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    42                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    43                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    44                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    45                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    46                           ; 
    47                           ; 
    48                           ; Code-generator required, PIC18F4550 Definitions
    49                           ; 
    50                           ; SFR Addresses
    51  0000                     _LATD	set	3980
    52  0000                     _RCONbits	set	4048
    53  0000                     _INTCON2bits	set	4081
    54  0000                     _INTCONbits	set	4082
    55  0000                     _TRISBbits	set	3987
    56  0000                     _TRISD	set	3989
    57                           
    58                           ; #config settings
    59                           
    60                           	psect	cinit
    61  00005E                     __pcinit:
    62                           	callstack 0
    63  00005E                     start_initialization:
    64                           	callstack 0
    65  00005E                     __initialization:
    66                           	callstack 0
    67                           
    68                           ; Clear objects allocated to COMRAM (1 bytes)
    69  00005E  6A01               	clrf	__pbssCOMRAM& (0+255),c
    70  000060                     end_of_initialization:
    71                           	callstack 0
    72  000060                     __end_of__initialization:
    73                           	callstack 0
    74  000060  9002               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
    75  000062  9202               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
    76  000064  0100               	movlb	0
    77  000066  EF22  F000         	goto	_main	;jump to C main() function
    78                           
    79                           	psect	bssCOMRAM
    80  000001                     __pbssCOMRAM:
    81                           	callstack 0
    82  000001                     _i:
    83                           	callstack 0
    84  000001                     	ds	1
    85                           
    86                           	psect	cstackCOMRAM
    87  000000                     __pcstackCOMRAM:
    88                           	callstack 0
    89  000000                     
    90                           ; 1 bytes @ 0x0
    91 ;;
    92 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
    93 ;;
    94 ;; *************** function _main *****************
    95 ;; Defined at:
    96 ;;		line 28 in file "main_interrupcion.c"
    97 ;; Parameters:    Size  Location     Type
    98 ;;		None
    99 ;; Auto vars:     Size  Location     Type
   100 ;;		None
   101 ;; Return value:  Size  Location     Type
   102 ;;                  1    wreg      void 
   103 ;; Registers used:
   104 ;;		wreg, status,2
   105 ;; Tracked objects:
   106 ;;		On entry : 0/0
   107 ;;		On exit  : 0/0
   108 ;;		Unchanged: 0/0
   109 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   110 ;;      Params:         0       0       0       0       0       0       0       0       0
   111 ;;      Locals:         0       0       0       0       0       0       0       0       0
   112 ;;      Temps:          0       0       0       0       0       0       0       0       0
   113 ;;      Totals:         0       0       0       0       0       0       0       0       0
   114 ;;Total ram usage:        0 bytes
   115 ;; Hardware stack levels required when called: 1
   116 ;; This function calls:
   117 ;;		Nothing
   118 ;; This function is called by:
   119 ;;		Startup code after reset
   120 ;; This function uses a non-reentrant model
   121 ;;
   122                           
   123                           	psect	text0
   124  000044                     __ptext0:
   125                           	callstack 0
   126  000044                     _main:
   127                           	callstack 30
   128  000044                     
   129                           ;main_interrupcion.c: 30:     TRISD = 0x00;
   130  000044  0E00               	movlw	0
   131  000046  6E95               	movwf	149,c	;volatile
   132  000048                     
   133                           ;main_interrupcion.c: 31:     TRISBbits.TRISB0 = 1;
   134  000048  8093               	bsf	147,0,c	;volatile
   135  00004A                     
   136                           ;main_interrupcion.c: 32:     INTCONbits.INT0IE = 1;
   137  00004A  88F2               	bsf	242,4,c	;volatile
   138  00004C                     
   139                           ;main_interrupcion.c: 33:     INTCON2bits.INTEDG0 = 0;
   140  00004C  9CF1               	bcf	241,6,c	;volatile
   141  00004E                     
   142                           ;main_interrupcion.c: 34:     INTCONbits.INT0IF = 0;
   143  00004E  92F2               	bcf	242,1,c	;volatile
   144  000050                     
   145                           ;main_interrupcion.c: 35:     RCONbits.IPEN = 0;
   146  000050  9ED0               	bcf	208,7,c	;volatile
   147  000052                     
   148                           ;main_interrupcion.c: 36:     INTCONbits.PEIE = 1;
   149  000052  8CF2               	bsf	242,6,c	;volatile
   150  000054                     
   151                           ;main_interrupcion.c: 37:     INTCONbits.GIE = 1;
   152  000054  8EF2               	bsf	242,7,c	;volatile
   153  000056                     l27:
   154  000056  EF2B  F000         	goto	l27
   155  00005A  EF07  F000         	goto	start
   156  00005E                     __end_of_main:
   157                           	callstack 0
   158                           
   159 ;; *************** function _ISR *****************
   160 ;; Defined at:
   161 ;;		line 47 in file "main_interrupcion.c"
   162 ;; Parameters:    Size  Location     Type
   163 ;;		None
   164 ;; Auto vars:     Size  Location     Type
   165 ;;		None
   166 ;; Return value:  Size  Location     Type
   167 ;;                  1    wreg      void 
   168 ;; Registers used:
   169 ;;		wreg, status,2, status,0
   170 ;; Tracked objects:
   171 ;;		On entry : 0/0
   172 ;;		On exit  : 0/0
   173 ;;		Unchanged: 0/0
   174 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   175 ;;      Params:         0       0       0       0       0       0       0       0       0
   176 ;;      Locals:         0       0       0       0       0       0       0       0       0
   177 ;;      Temps:          0       0       0       0       0       0       0       0       0
   178 ;;      Totals:         0       0       0       0       0       0       0       0       0
   179 ;;Total ram usage:        0 bytes
   180 ;; Hardware stack levels used: 1
   181 ;; This function calls:
   182 ;;		Nothing
   183 ;; This function is called by:
   184 ;;		Interrupt level 2
   185 ;; This function uses a non-reentrant model
   186 ;;
   187                           
   188                           	psect	intcode
   189  000008                     __pintcode:
   190                           	callstack 0
   191  000008                     _ISR:
   192                           	callstack 30
   193                           
   194                           ;incstack = 0
   195  000008  8202               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
   196  00000A  ED09  F000         	call	int_func,f	;refresh shadow registers
   197                           
   198                           	psect	intcode_body
   199  000012                     __pintcode_body:
   200                           	callstack 30
   201  000012                     int_func:
   202                           	callstack 30
   203  000012  0006               	pop		; remove dummy address from shadow register refresh
   204  000014                     
   205                           ;main_interrupcion.c: 49:     if (INTCONbits.INT0IF) {
   206  000014  A2F2               	btfss	242,1,c	;volatile
   207  000016  EF0F  F000         	goto	i2u2_41
   208  00001A  EF11  F000         	goto	i2u2_40
   209  00001E                     i2u2_41:
   210  00001E  EF20  F000         	goto	i2l37
   211  000022                     i2u2_40:
   212  000022                     
   213                           ;main_interrupcion.c: 50:         INTCONbits.INT0IF = 0;
   214  000022  92F2               	bcf	242,1,c	;volatile
   215  000024                     
   216                           ;main_interrupcion.c: 52:         if (++i == 16) {
   217  000024  2A01               	incf	_i^0,f,c
   218  000026  0E10               	movlw	16
   219  000028  1801               	xorwf	_i^0,w,c
   220  00002A  A4D8               	btfss	status,2,c
   221  00002C  EF1A  F000         	goto	i2u3_41
   222  000030  EF1C  F000         	goto	i2u3_40
   223  000034                     i2u3_41:
   224  000034  EF1E  F000         	goto	i2l743
   225  000038                     i2u3_40:
   226  000038                     
   227                           ;main_interrupcion.c: 53:             i = 0;
   228  000038  0E00               	movlw	0
   229  00003A  6E01               	movwf	_i^0,c
   230  00003C                     i2l743:
   231                           
   232                           ;main_interrupcion.c: 55:         LATD = i;
   233  00003C  C001  FF8C         	movff	_i,3980	;volatile
   234  000040                     i2l37:
   235  000040  9202               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   236  000042  0011               	retfie		f
   237  000044                     __end_of_ISR:
   238                           	callstack 0
   239  0000                     
   240                           	psect	rparam
   241  0000                     
   242                           	psect	temp
   243  000002                     btemp:
   244                           	callstack 0
   245  000002                     	ds	1
   246  0000                     int$flags	set	btemp
   247  0000                     wtemp8	set	btemp+1
   248  0000                     ttemp5	set	btemp+1
   249  0000                     ttemp6	set	btemp+4
   250  0000                     ttemp7	set	btemp+8
   251                           
   252                           	psect	idloc
   253                           
   254                           ;Config register IDLOC0 @ 0x200000
   255                           ;	unspecified, using default values
   256  200000                     	org	2097152
   257  200000  FF                 	db	255
   258                           
   259                           ;Config register IDLOC1 @ 0x200001
   260                           ;	unspecified, using default values
   261  200001                     	org	2097153
   262  200001  FF                 	db	255
   263                           
   264                           ;Config register IDLOC2 @ 0x200002
   265                           ;	unspecified, using default values
   266  200002                     	org	2097154
   267  200002  FF                 	db	255
   268                           
   269                           ;Config register IDLOC3 @ 0x200003
   270                           ;	unspecified, using default values
   271  200003                     	org	2097155
   272  200003  FF                 	db	255
   273                           
   274                           ;Config register IDLOC4 @ 0x200004
   275                           ;	unspecified, using default values
   276  200004                     	org	2097156
   277  200004  FF                 	db	255
   278                           
   279                           ;Config register IDLOC5 @ 0x200005
   280                           ;	unspecified, using default values
   281  200005                     	org	2097157
   282  200005  FF                 	db	255
   283                           
   284                           ;Config register IDLOC6 @ 0x200006
   285                           ;	unspecified, using default values
   286  200006                     	org	2097158
   287  200006  FF                 	db	255
   288                           
   289                           ;Config register IDLOC7 @ 0x200007
   290                           ;	unspecified, using default values
   291  200007                     	org	2097159
   292  200007  FF                 	db	255
   293                           
   294                           	psect	config
   295                           
   296                           ;Config register CONFIG1L @ 0x300000
   297                           ;	PLL Prescaler Selection bits
   298                           ;	PLLDIV = 1, No prescale (4 MHz oscillator input drives PLL directly)
   299                           ;	System Clock Postscaler Selection bits
   300                           ;	CPUDIV = OSC1_PLL2, [Primary Oscillator Src: /1][96 MHz PLL Src: /2]
   301                           ;	USB Clock Selection bit (used in Full-Speed USB mode only; UCFG:FSEN = 1)
   302                           ;	USBDIV = 1, USB clock source comes directly from the primary oscillator block with no 
      +                          postscale
   303  300000                     	org	3145728
   304  300000  00                 	db	0
   305                           
   306                           ;Config register CONFIG1H @ 0x300001
   307                           ;	Oscillator Selection bits
   308                           ;	FOSC = HS, HS oscillator (HS)
   309                           ;	Fail-Safe Clock Monitor Enable bit
   310                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
   311                           ;	Internal/External Oscillator Switchover bit
   312                           ;	IESO = OFF, Oscillator Switchover mode disabled
   313  300001                     	org	3145729
   314  300001  0C                 	db	12
   315                           
   316                           ;Config register CONFIG2L @ 0x300002
   317                           ;	Power-up Timer Enable bit
   318                           ;	PWRT = OFF, PWRT disabled
   319                           ;	Brown-out Reset Enable bits
   320                           ;	BOR = ON, Brown-out Reset enabled in hardware only (SBOREN is disabled)
   321                           ;	Brown-out Reset Voltage bits
   322                           ;	BORV = 3, Minimum setting 2.05V
   323                           ;	USB Voltage Regulator Enable bit
   324                           ;	VREGEN = OFF, USB voltage regulator disabled
   325  300002                     	org	3145730
   326  300002  1F                 	db	31
   327                           
   328                           ;Config register CONFIG2H @ 0x300003
   329                           ;	Watchdog Timer Enable bit
   330                           ;	WDT = ON, WDT enabled
   331                           ;	Watchdog Timer Postscale Select bits
   332                           ;	WDTPS = 32768, 1:32768
   333  300003                     	org	3145731
   334  300003  1F                 	db	31
   335                           
   336                           ; Padding undefined space
   337  300004                     	org	3145732
   338  300004  FF                 	db	255
   339                           
   340                           ;Config register CONFIG3H @ 0x300005
   341                           ;	CCP2 MUX bit
   342                           ;	CCP2MX = ON, CCP2 input/output is multiplexed with RC1
   343                           ;	PORTB A/D Enable bit
   344                           ;	PBADEN = OFF, PORTB<4:0> pins are configured as digital I/O on Reset
   345                           ;	Low-Power Timer 1 Oscillator Enable bit
   346                           ;	LPT1OSC = OFF, Timer1 configured for higher power operation
   347                           ;	MCLR Pin Enable bit
   348                           ;	MCLRE = ON, MCLR pin enabled; RE3 input pin disabled
   349  300005                     	org	3145733
   350  300005  81                 	db	129
   351                           
   352                           ;Config register CONFIG4L @ 0x300006
   353                           ;	Stack Full/Underflow Reset Enable bit
   354                           ;	STVREN = ON, Stack full/underflow will cause Reset
   355                           ;	Single-Supply ICSP Enable bit
   356                           ;	LVP = ON, Single-Supply ICSP enabled
   357                           ;	Dedicated In-Circuit Debug/Programming Port (ICPORT) Enable bit
   358                           ;	ICPRT = OFF, ICPORT disabled
   359                           ;	Extended Instruction Set Enable bit
   360                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
   361                           ;	Background Debugger Enable bit
   362                           ;	DEBUG = 0x1, unprogrammed default
   363  300006                     	org	3145734
   364  300006  85                 	db	133
   365                           
   366                           ; Padding undefined space
   367  300007                     	org	3145735
   368  300007  FF                 	db	255
   369                           
   370                           ;Config register CONFIG5L @ 0x300008
   371                           ;	Code Protection bit
   372                           ;	CP0 = OFF, Block 0 (000800-001FFFh) is not code-protected
   373                           ;	Code Protection bit
   374                           ;	CP1 = OFF, Block 1 (002000-003FFFh) is not code-protected
   375                           ;	Code Protection bit
   376                           ;	CP2 = OFF, Block 2 (004000-005FFFh) is not code-protected
   377                           ;	Code Protection bit
   378                           ;	CP3 = OFF, Block 3 (006000-007FFFh) is not code-protected
   379  300008                     	org	3145736
   380  300008  0F                 	db	15
   381                           
   382                           ;Config register CONFIG5H @ 0x300009
   383                           ;	Boot Block Code Protection bit
   384                           ;	CPB = OFF, Boot block (000000-0007FFh) is not code-protected
   385                           ;	Data EEPROM Code Protection bit
   386                           ;	CPD = OFF, Data EEPROM is not code-protected
   387  300009                     	org	3145737
   388  300009  C0                 	db	192
   389                           
   390                           ;Config register CONFIG6L @ 0x30000A
   391                           ;	Write Protection bit
   392                           ;	WRT0 = OFF, Block 0 (000800-001FFFh) is not write-protected
   393                           ;	Write Protection bit
   394                           ;	WRT1 = OFF, Block 1 (002000-003FFFh) is not write-protected
   395                           ;	Write Protection bit
   396                           ;	WRT2 = OFF, Block 2 (004000-005FFFh) is not write-protected
   397                           ;	Write Protection bit
   398                           ;	WRT3 = OFF, Block 3 (006000-007FFFh) is not write-protected
   399  30000A                     	org	3145738
   400  30000A  0F                 	db	15
   401                           
   402                           ;Config register CONFIG6H @ 0x30000B
   403                           ;	Configuration Register Write Protection bit
   404                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) are not write-protected
   405                           ;	Boot Block Write Protection bit
   406                           ;	WRTB = OFF, Boot block (000000-0007FFh) is not write-protected
   407                           ;	Data EEPROM Write Protection bit
   408                           ;	WRTD = OFF, Data EEPROM is not write-protected
   409  30000B                     	org	3145739
   410  30000B  E0                 	db	224
   411                           
   412                           ;Config register CONFIG7L @ 0x30000C
   413                           ;	Table Read Protection bit
   414                           ;	EBTR0 = OFF, Block 0 (000800-001FFFh) is not protected from table reads executed in ot
      +                          her blocks
   415                           ;	Table Read Protection bit
   416                           ;	EBTR1 = OFF, Block 1 (002000-003FFFh) is not protected from table reads executed in ot
      +                          her blocks
   417                           ;	Table Read Protection bit
   418                           ;	EBTR2 = OFF, Block 2 (004000-005FFFh) is not protected from table reads executed in ot
      +                          her blocks
   419                           ;	Table Read Protection bit
   420                           ;	EBTR3 = OFF, Block 3 (006000-007FFFh) is not protected from table reads executed in ot
      +                          her blocks
   421  30000C                     	org	3145740
   422  30000C  0F                 	db	15
   423                           
   424                           ;Config register CONFIG7H @ 0x30000D
   425                           ;	Boot Block Table Read Protection bit
   426                           ;	EBTRB = OFF, Boot block (000000-0007FFh) is not protected from table reads executed in
      +                           other blocks
   427  30000D                     	org	3145741
   428  30000D  40                 	db	64
   429                           tosu	equ	0xFFF
   430                           tosh	equ	0xFFE
   431                           tosl	equ	0xFFD
   432                           stkptr	equ	0xFFC
   433                           pclatu	equ	0xFFB
   434                           pclath	equ	0xFFA
   435                           pcl	equ	0xFF9
   436                           tblptru	equ	0xFF8
   437                           tblptrh	equ	0xFF7
   438                           tblptrl	equ	0xFF6
   439                           tablat	equ	0xFF5
   440                           prodh	equ	0xFF4
   441                           prodl	equ	0xFF3
   442                           indf0	equ	0xFEF
   443                           postinc0	equ	0xFEE
   444                           postdec0	equ	0xFED
   445                           preinc0	equ	0xFEC
   446                           plusw0	equ	0xFEB
   447                           fsr0h	equ	0xFEA
   448                           fsr0l	equ	0xFE9
   449                           wreg	equ	0xFE8
   450                           indf1	equ	0xFE7
   451                           postinc1	equ	0xFE6
   452                           postdec1	equ	0xFE5
   453                           preinc1	equ	0xFE4
   454                           plusw1	equ	0xFE3
   455                           fsr1h	equ	0xFE2
   456                           fsr1l	equ	0xFE1
   457                           bsr	equ	0xFE0
   458                           indf2	equ	0xFDF
   459                           postinc2	equ	0xFDE
   460                           postdec2	equ	0xFDD
   461                           preinc2	equ	0xFDC
   462                           plusw2	equ	0xFDB
   463                           fsr2h	equ	0xFDA
   464                           fsr2l	equ	0xFD9
   465                           status	equ	0xFD8

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         1
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94      0       1
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMRAM

    None.

Critical Paths under _ISR in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _ISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _ISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _ISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _ISR in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (1) _ISR                                                  0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)

 _ISR (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0       0      21        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0       0       5        0.0%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E      0       1       1        1.1%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0       1      20        0.0%
DATA                 0      0       1       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.32 build 20210201212658 
Symbol Table                                                                                   Thu Oct 17 15:29:25 2024

                      _i 0001                       l27 0056                       l28 0056  
                    l721 0048                      l731 0052                      l723 004A  
                    l733 0054                      l725 004C                      l727 004E  
                    l719 0044                      l729 0050                      _ISR 0008  
                   ?_ISR 0000                     _LATD 000F8C                     i2l37 0040  
                   _main 0044                     btemp 0002                     start 000E  
           ___param_bank 000000                    ??_ISR 0000                    ?_main 0000  
                  i2l741 0038                    i2l743 003C                    i2l735 0014  
                  i2l737 0022                    i2l739 0024                    _TRISD 000F95  
                  ttemp5 0003                    ttemp6 0006                    ttemp7 000A  
                  status 000FD8                    wtemp8 0003          __initialization 005E  
           __end_of_main 005E                   ??_main 0000            __activetblptr 000000  
                 i2u2_40 0022                   i2u2_41 001E                   i2u3_40 0038  
                 i2u3_41 0034                   isa$std 000001               __accesstop 0060  
__end_of__initialization 0060            ___rparam_used 000001           __pcstackCOMRAM 0000  
                __Hparam 0000                  __Lparam 0000                  __pcinit 005E  
                __ramtop 0800                  __ptext0 0044             __size_of_ISR 003C  
         __pintcode_body 0012     end_of_initialization 0060                  int_func 0012  
              _TRISBbits 000F93      start_initialization 005E              __end_of_ISR 0044  
            __pbssCOMRAM 0001                __pintcode 0008                 _RCONbits 000FD0  
            _INTCON2bits 000FF1                 __Hrparam 0000                 __Lrparam 0000  
          __size_of_main 001A                 isa$xinst 000000                 int$flags 0002  
             _INTCONbits 000FF2                 intlevel2 0000  
